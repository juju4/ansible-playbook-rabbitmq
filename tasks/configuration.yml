---
- name: create the ssl folder for rabbitmq
  file:
    path=/etc/rabbitmq/ssl/
    owner=rabbitmq
    group=rabbitmq
    mode=0750
    state=directory
  when: rabbitmq_ssl

- block:
    - name: copy the ssl certificates
      copy:
        src={{ item.src }}
        dest={{ item.dest }}
        owner=rabbitmq
        group=rabbitmq
        mode=0640
        backup=yes
      with_items:
        - src: "{{ rabbitmq_cacert }}"
          dest: "{{ rabbitmq_conf_ssl_options_cacertfile }}"
        - src: "{{ rabbitmq_server_key }}"
          dest: "{{ rabbitmq_conf_ssl_options_keyfile }}"
        - src: "{{ rabbitmq_server_cert }}"
          dest: "{{ rabbitmq_conf_ssl_options_certfile }}"
  when: rabbitmq_ssl and rabbitmq_cert_source == 'local'

- stat: path="{{ rabbitmq_conf_ssl_options_certfile }}"
  register: existingcert
- block:
    - name: check ssl files permissions (if not copied)
      file: dest="{{ item }}" owner=rabbitmq group=rabbitmq mode=0640
      with_items:
        - "{{ rabbitmq_conf_ssl_options_cacertfile }}"
        - "{{ rabbitmq_conf_ssl_options_keyfile }}"
        - "{{ rabbitmq_conf_ssl_options_certfile }}"
  when: rabbitmq_ssl and existingcert.stat.exists

- name: generate the configuration of rabbitmq
  template:
    src=rabbitmq.config.j2
    dest=/etc/rabbitmq/rabbitmq.config
    owner=rabbitmq
    group=rabbitmq
    mode=0644
    backup=yes
  notify: restart rabbitmq-server

- name: generate environment-specific configuration
  template:
    src=rabbitmq-env.conf.j2
    dest=/etc/rabbitmq/rabbitmq-env.conf
    owner=rabbitmq
    group=rabbitmq
    mode=0644
    backup=yes
  notify: restart rabbitmq-server
  when: rabbitmq_conf_env is defined

- name: Ensure correct permission for .erlang.cookie
  file:
    dest: /var/lib/rabbitmq/.erlang.cookie
    owner: rabbitmq
    group: rabbitmq
    mode: '0600'
    state: file
